<a href="/"><h1>Shared Text</h1></a>

<% if @qr_code_svg.present? %>
  <div>
    <h2>QR Code</h2>
    <%= raw @qr_code_svg %>
  </div>
<%end%>

<% if @shared_texts.present? %>
  <ul>
    <% @shared_texts.each do |shared_text| %>
      <li><%= simple_format(shared_text.content, {}, wrapper_tag: "div") %></li>
    <%end%>
  </ul>
<% end %>

<%= form_with model: SharedText.new, url: shared_texts_path(room_key: params[:room_key]), local: true do |form| %>
  <% if params[:room_key].present? %>
    <%= form.hidden_field :room_key, value: params[:room_key] %>
  <% end %>
  <div>
    <%= form.label :content %><br>
    <%= form.text_area :content %>
  </div>
  <div>
    <%= form.submit "Share" %>
  </div>
<%end%>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const intervalId = setInterval(function() {
      fetch(`/shared_texts/fetch_texts?room_key=${encodeURIComponent('<%= params[:room_key] %>')}`)
      .then(response => response.json())
      .then(data => {
        let list = document.querySelector('ul')
        list.innerHTML = "";
        data.forEach(text => {
          console.log(text)
          let listItem = document.createElement('li')
          const replacedText = text.content.replace(/\n+/g, '\n')
          listItem.innerHTML = replacedText.replace(/\n/g, '<br />');
          list.appendChild(listItem)
        });
      })
      .catch(error => console.error('Error:', error))
    }, 5000);
    document.addEventListener('beforeunload', function() {
      clearInterval(intervalId)
    })
  })
</script>

